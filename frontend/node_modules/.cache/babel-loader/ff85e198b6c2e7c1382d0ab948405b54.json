{"ast":null,"code":"import Axios from \"axios\";\nimport { PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../constants/ProductConstants\";\n/* Actions */\n\n/* list products from backend */\n\nexport const listProducts = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/products');\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: err.message\n    });\n  }\n};\n/* get product details from backend */\n\nexport function detailsProduct(productId) {\n  return async dispatch => {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n\n    try {\n      const {\n        data\n      } = await Axios.get(`/api/products/${productId}`);\n      dispatch({\n        type: PRODUCT_DETAILS_SUCCESS,\n        payload: data\n      });\n    }\n    /* product lookup failure */\n    catch (err) {\n      dispatch({\n        type: PRODUCT_DETAILS_FAIL,\n        payload:\n        /*  backend failure */\n        err.response && err.response.data.message\n        /* render the error message from backend */\n        ? err.resonse.data.message\n        /* otherwise, diplay the generic error message */\n        : err.message\n      });\n    }\n  };\n}","map":{"version":3,"sources":["/Users/smoke/Desktop/EZTechWebsite/frontend/src/actions/ProductActions.js"],"names":["Axios","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","listProducts","dispatch","type","data","get","payload","err","message","detailsProduct","productId","response","resonse"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,EAA+BC,uBAA/B,EAAwDC,uBAAxD,EAAiFC,iBAAjF,EAAoGC,oBAApG,EAA0HC,oBAA1H,QAAsJ,+BAAtJ;AAEA;;AAEA;;AACA,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAElDA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEJ;AAAP,GAAD,CAAR;;AAEA,MAAG;AAEC,UAAM;AAACK,MAAAA;AAAD,QAAS,MAAMV,KAAK,CAACW,GAAN,CAAU,eAAV,CAArB;AACAH,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEH,oBAAP;AAA6BM,MAAAA,OAAO,EAACF;AAArC,KAAD,CAAR;AAEH,GALD,CAOA,OAAMG,GAAN,EAAU;AAENL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACL,iBAAN;AAAyBQ,MAAAA,OAAO,EAACC,GAAG,CAACC;AAArC,KAAD,CAAR;AACH;AACJ,CAfM;AAiBP;;AACA,OAAO,SAASC,cAAT,CAAwBC,SAAxB,EAAmC;AACtC,SAAO,MAAOR,QAAP,IAAoB;AAEvBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,uBAAR;AAAiCU,MAAAA,OAAO,EAAEI;AAA1C,KAAD,CAAR;;AAEA,QAAI;AAEA,YAAM;AAAEN,QAAAA;AAAF,UAAW,MAAMV,KAAK,CAACW,GAAN,CAAW,iBAAgBK,SAAU,EAArC,CAAvB;AACAR,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEN,uBAAR;AAAiCS,QAAAA,OAAO,EAAEF;AAA1C,OAAD,CAAR;AACH;AAED;AACA,WAAOG,GAAP,EAAY;AAERL,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAER,oBADD;AACuBW,QAAAA,OAAO;AAC/B;AACAC,QAAAA,GAAG,CAACI,QAAJ,IAAgBJ,GAAG,CAACI,QAAJ,CAAaP,IAAb,CAAkBI;AAE9B;AAFJ,UAGMD,GAAG,CAACK,OAAJ,CAAYR,IAAZ,CAAiBI;AAEnB;AALJ,UAMMD,GAAG,CAACC;AATT,OAAD,CAAR;AAWH;AACJ,GAzBD;AA0BH","sourcesContent":["import Axios from \"axios\";\nimport { PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../constants/ProductConstants\"\n\n/* Actions */\n\n/* list products from backend */\nexport const listProducts = () => async (dispatch) => {\n\n    dispatch({type: PRODUCT_LIST_REQUEST});\n\n    try{\n\n        const {data} = await Axios.get('/api/products');\n        dispatch({type: PRODUCT_LIST_SUCCESS, payload:data});\n\n    }\n\n    catch(err){\n\n        dispatch({type:PRODUCT_LIST_FAIL, payload:err.message});\n    }\n};\n\n/* get product details from backend */\nexport function detailsProduct(productId) {\n    return async (dispatch) => {\n\n        dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\n\n        try {\n\n            const { data } = await Axios.get(`/api/products/${productId}`);\n            dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n        }\n\n        /* product lookup failure */\n        catch (err) {\n\n            dispatch({\n                type: PRODUCT_DETAILS_FAIL, payload:\n                    /*  backend failure */\n                    err.response && err.response.data.message\n\n                        /* render the error message from backend */\n                        ? err.resonse.data.message\n\n                        /* otherwise, diplay the generic error message */\n                        : err.message\n            });\n        }\n    };\n}"]},"metadata":{},"sourceType":"module"}