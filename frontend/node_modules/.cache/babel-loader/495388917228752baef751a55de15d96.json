{"ast":null,"code":"var _jsxFileName = \"/Users/smoke/AndroidStudioProjects/New_Project/EZTechWebsite/frontend/src/Screens/SelectScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\"; // import Axios from 'axios';\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCurrentSelectedValues, addUserDropdownOption } from \"../actions/DropDownActions\";\nimport MultiSearchDropDown from \"../componets/MultiSearchDropDown\"; // import DeviceDropDown from \"../componets/DeviceDropDown\";\n\nexport default function SelectScreen() {\n  _s();\n\n  /* use to get redux actions from within  */\n  const dispatch = useDispatch();\n  /* get prouductlist from redux store  */\n\n  const connected = useSelector(state => state.connected);\n  const options = useSelector(state => state.options);\n  const selectedValues = useSelector(state => state.selectedValues);\n  /* get data from the product list */\n  //const {loading, error, products} = productList;\n\n  /* Send request to backend (Should run once) */\n\n  useEffect(() => {\n    dispatch(addUserDropdownOption(), setCurrentSelectedValues());\n  }, [dispatch]);\n  /* get data from the product list */\n\n  const {\n    loading,\n    error,\n    products\n  } = productList;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MultiSearchDropDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 14\n    }\n  }));\n}\n\n_s(SelectScreen, \"6y9ge51TqbBNUkdgR7Y4gsTCZjU=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = SelectScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectScreen\");","map":{"version":3,"sources":["/Users/smoke/AndroidStudioProjects/New_Project/EZTechWebsite/frontend/src/Screens/SelectScreen.js"],"names":["React","useEffect","useDispatch","useSelector","setCurrentSelectedValues","addUserDropdownOption","MultiSearchDropDown","SelectScreen","dispatch","connected","state","options","selectedValues","loading","error","products","productList"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAASC,wBAAT,EAAmCC,qBAAnC,QAAgE,4BAAhE;AACA,OAAOC,mBAAP,MAAgC,kCAAhC,C,CACA;;AAEA,eAAe,SAASC,YAAT,GAAuB;AAAA;;AAGlC;AACA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA;;AACA,QAAMO,SAAS,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,SAAlB,CAA7B;AAEA,QAAME,OAAO,GAAGR,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,OAAlB,CAA3B;AACA,QAAMC,cAAc,GAAGT,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACE,cAAlB,CAAlC;AAGA;AACA;;AAEA;;AACAX,EAAAA,SAAS,CAAC,MAAM;AAEZO,IAAAA,QAAQ,CAACH,qBAAqB,EAAtB,EAA0BD,wBAAwB,EAAlD,CAAR;AAGH,GALQ,EAKN,CAACI,QAAD,CALM,CAAT;AAQJ;;AACA,QAAM;AAACK,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAA6BC,WAAnC;AACI,sBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,CAFJ;AAOH;;GAlCuBT,Y;UAIHL,W,EAGCC,W,EAEFA,W,EACOA,W;;;KAVHI,Y","sourcesContent":["import React, {useEffect} from \"react\";\n// import Axios from 'axios';\nimport {useDispatch, useSelector } from \"react-redux\";\nimport { setCurrentSelectedValues, addUserDropdownOption } from \"../actions/DropDownActions\";\nimport MultiSearchDropDown from \"../componets/MultiSearchDropDown\";\n// import DeviceDropDown from \"../componets/DeviceDropDown\";\n\nexport default function SelectScreen(){\n\n\n    /* use to get redux actions from within  */\n    const dispatch = useDispatch();\n\n    /* get prouductlist from redux store  */\n    const connected = useSelector((state) => state.connected);\n\n    const options = useSelector((state) => state.options);\n    const selectedValues = useSelector((state) => state.selectedValues);\n\n\n    /* get data from the product list */\n    //const {loading, error, products} = productList;\n    \n    /* Send request to backend (Should run once) */\n    useEffect(() => {\n\n        dispatch(addUserDropdownOption(), setCurrentSelectedValues());\n\n\n    }, [dispatch]);\n\n\n/* get data from the product list */\nconst {loading, error, products} = productList;\n    return (\n\n        <div>\n             <MultiSearchDropDown />\n        </div>\n    );\n\n}"]},"metadata":{},"sourceType":"module"}