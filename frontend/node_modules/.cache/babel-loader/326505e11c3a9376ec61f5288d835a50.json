{"ast":null,"code":"import Axios from \"axios\";\nimport { PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../constants/ProductConstants\";\n/* Actions */\n// \n// export const listProducts = () => async (dispatch) => {\n//     dispatch({type: PRODUCT_LIST_REQUEST});\n//     try{\n//         const {data} = await Axios.get('/api/products');\n//         dispatch({type: PRODUCT_LIST_SUCCESS, payload:data});\n//     }\n//     catch(err){\n//         dispatch({type:PRODUCT_LIST_FAIL, payload:err.message});\n//     }\n// };\n// \n// export const detailsProduct = (productId) => async (dispatch) => {\n//     dispatch({type: PRODUCT_DETAILS_REQUEST, payload: productId});\n//     try{\n//         const {data} = await Axios.get(`/api/products/${productId}`);\n//         dispatch({type: PRODUCT_DETAILS_SUCCESS, payload:data});\n//     }\n//     /* product lookup failure */\n//     catch(err){\n//         dispatch({type: PRODUCT_DETAILS_FAIL, payload: \n//             /*  backend failure */\n//             err.response && err.response.data.message \n//             /* render the error message from backend */\n//             ? err.resonse.data.message\n//             /* otherwise, diplay the generic error message */\n//             : err.message});\n//     }\n// };\n\n/* list products from backend */\n\nexport const listProducts = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/products');\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: err.message\n    });\n  }\n};\n/* get product details from backend */\n\nexport const detailsProduct = productId => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST,\n    payload: productId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/${productId}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? err.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/smoke/AndroidStudioProjects/New_Project/EZTechWebsite/frontend/src/actions/ProductActions.js"],"names":["Axios","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","listProducts","dispatch","type","data","get","payload","err","message","detailsProduct","productId","error","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,EAA+BC,uBAA/B,EAAwDC,uBAAxD,EAAiFC,iBAAjF,EAAoGC,oBAApG,EAA0HC,oBAA1H,QAAsJ,+BAAtJ;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;AAEA;;AACA,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAElDA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEJ;AAAP,GAAD,CAAR;;AAEA,MAAI;AAEF,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAMV,KAAK,CAACW,GAAN,CAAU,eAAV,CAAvB;AAEAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEH,oBAAR;AAA8BM,MAAAA,OAAO,EAAEF;AAAvC,KAAD,CAAR;AAED,GAND,CAQA,OAAMG,GAAN,EAAW;AAETL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,iBAAR;AAA2BQ,MAAAA,OAAO,EAAEC,GAAG,CAACC;AAAxC,KAAD,CAAR;AAED;AACF,CAjBI;AAoBL;;AACA,OAAO,MAAMC,cAAc,GAAIC,SAAD,IAAe,MAAOR,QAAP,IAAoB;AAE/DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP,uBAAR;AAAiCU,IAAAA,OAAO,EAAEI;AAA1C,GAAD,CAAR;;AAEA,MAAI;AAEF,UAAM;AAAEN,MAAAA;AAAF,QAAW,MAAMV,KAAK,CAACW,GAAN,CAAW,iBAAgBK,SAAU,EAArC,CAAvB;AAEAR,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,uBAAR;AAAiCS,MAAAA,OAAO,EAAEF;AAA1C,KAAD,CAAR;AAED,GAND,CAOA,OAAMG,GAAN,EAAW;AAETL,IAAAA,QAAQ,CAAC;AAEPC,MAAAA,IAAI,EAAER,oBAFC;AAEoBW,MAAAA,OAAO,EAAEK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBI,OAAtC,GAC9BD,GAAG,CAACK,QAAJ,CAAaR,IAAb,CAAkBI,OADY,GAE9BG,KAAK,CAACH;AAJL,KAAD,CAAR;AAMD;AACF,CApBM","sourcesContent":["import Axios from \"axios\";\nimport { PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../constants/ProductConstants\"\n\n/* Actions */\n\n// \n// export const listProducts = () => async (dispatch) => {\n\n//     dispatch({type: PRODUCT_LIST_REQUEST});\n\n//     try{\n\n//         const {data} = await Axios.get('/api/products');\n//         dispatch({type: PRODUCT_LIST_SUCCESS, payload:data});\n\n//     }\n\n//     catch(err){\n\n//         dispatch({type:PRODUCT_LIST_FAIL, payload:err.message});\n//     }\n// };\n\n// \n// export const detailsProduct = (productId) => async (dispatch) => {\n\n//     dispatch({type: PRODUCT_DETAILS_REQUEST, payload: productId});\n\n//     try{\n\n//         const {data} = await Axios.get(`/api/products/${productId}`);\n//         dispatch({type: PRODUCT_DETAILS_SUCCESS, payload:data});\n//     }\n\n//     /* product lookup failure */\n//     catch(err){\n\n//         dispatch({type: PRODUCT_DETAILS_FAIL, payload: \n            \n//             /*  backend failure */\n//             err.response && err.response.data.message \n            \n//             /* render the error message from backend */\n//             ? err.resonse.data.message\n            \n//             /* otherwise, diplay the generic error message */\n//             : err.message});\n//     }\n// };\n\n/* list products from backend */\nexport const listProducts = () => async (dispatch) => {\n\n    dispatch({type: PRODUCT_LIST_REQUEST,});\n\n    try {\n\n      const { data } = await Axios.get('/api/products');\n\n      dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n\n    } \n    \n    catch(err) {\n\n      dispatch({ type: PRODUCT_LIST_FAIL, payload: err.message });\n\n    }\n  };\n  \n\n  /* get product details from backend */\n  export const detailsProduct = (productId) => async (dispatch) => {\n\n    dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\n\n    try {\n\n      const { data } = await Axios.get(`/api/products/${productId}`);\n\n      dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n\n    } \n    catch(err) {\n\n      dispatch({\n\n        type: PRODUCT_DETAILS_FAIL,payload: error.response && error.response.data.message\n            ? err.response.data.message\n            : error.message,\n      });\n    }\n  };"]},"metadata":{},"sourceType":"module"}