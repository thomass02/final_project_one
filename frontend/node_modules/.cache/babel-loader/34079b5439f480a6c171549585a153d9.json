{"ast":null,"code":"var _jsxFileName = \"/Users/smoke/AndroidStudioProjects/New_Project/EZTechWebsite/frontend/src/Screens/SigninScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { signin } from '../actions/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SigninScreen(props) {\n  _s();\n\n  /* react hooks to set inital states of username and password */\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('initialState');\n  /* establish redirect - use history (if exsists), if not go to home */\n\n  const redirect = props.location.search ? props.location.search.split('=', [1]) : '/';\n  /* get the user data from redux reavt */\n\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userData\n  } = userSignin;\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    /* prevents inital refresh */\n    e.preventDefault();\n    /* call the dispatcher (pass in username and password) from actions component */\n\n    dispatch(signin(email, password));\n  };\n\n  useEffect(() => {\n    /* user data avaliable - send to redirect */\n    if (userData) {\n      props.history.push(redirect);\n    }\n  }, [userData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Please Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          placeholder: \"Please enter email\",\n          required: true,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          placeholder: \"Please enter password\",\n          required: true,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary\",\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"New customer? \", ' ', \" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            children: \"Create a new accout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SigninScreen, \"/iB0zvhnzXAW0Wy/RVg5UaCoguA=\", true, function () {\n  return [useDispatch];\n});\n\n_c = SigninScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SigninScreen\");","map":{"version":3,"sources":["/Users/smoke/AndroidStudioProjects/New_Project/EZTechWebsite/frontend/src/Screens/SigninScreen.js"],"names":["React","useState","Link","useDispatch","signin","SigninScreen","props","email","setEmail","password","setPassword","redirect","location","search","split","userSignin","useSelector","state","userData","dispatch","submitHandler","e","preventDefault","useEffect","history","push","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { signin } from '../actions/userActions';\n\n\n\nexport default function SigninScreen(props) {\n\n    /* react hooks to set inital states of username and password */\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('initialState');\n\n    /* establish redirect - use history (if exsists), if not go to home */\n    const redirect = props.location.search? props.location.search.split('=', [1]):'/';\n\n    /* get the user data from redux reavt */\n    const userSignin = useSelector((state) => state.userSignin);\n    const {userData} = userSignin;\n\n\n    const dispatch = useDispatch();\n\n    const submitHandler = (e) => {\n\n        /* prevents inital refresh */\n        e.preventDefault();\n        \n        /* call the dispatcher (pass in username and password) from actions component */\n        dispatch(signin(email, password));\n    };\n\n\n    useEffect(() => {\n        /* user data avaliable - send to redirect */\n       if(userData){\n            props.history.push(redirect);\n       }\n\n    }, [userData]);\n\n\n    return (\n        <div>\n           <form className=\"form\" onSubmit={submitHandler}>\n               <div>\n                   <h1>Please Sign In</h1>\n               </div>\n               <div>\n               <label htmlFor=\"email\">Email Address</label>\n                   <input type=\"email\" id=\"email\" placeholder=\"Please enter email\" required onChange={e => setEmail(e.target.value)}></input>\n               </div>\n\n               <div>\n                   <label htmlFor=\"password\">Password</label>\n                   <input type=\"password\" id=\"password\" placeholder=\"Please enter password\" required onChange={e => setPassword(e.target.value)}></input>\n               </div>\n\n               <div>\n                   <label />\n                   <button className=\"primary\" type=\"submit\">Sign In</button>\n               </div>\n\n                {/* /* allow users to create a new account */}\n               <div>\n                   <label />\n                   <div>New customer? {' '} <Link to=\"/register\">Create a new accout</Link></div>\n               </div>\n\n           </form>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}