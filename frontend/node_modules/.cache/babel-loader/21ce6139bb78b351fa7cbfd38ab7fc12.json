{"ast":null,"code":"var _jsxFileName = \"/Users/smoke/Desktop/EZTechWebsite/frontend/src/Screens/HomeScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Axios from 'axios';\nimport Product from \"../componets/Product\";\nimport LoadingBox from \"../componets/LoadingBox\";\nimport MessageBox from \"../componets/MessageBox\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listProducts } from \"../actions/ProductActions\"; // import data from \"../data\";\n\nexport default function HomeScreen() {\n  _s();\n\n  /* use to get redux actions from within  */\n  const dispatch = useDispatch();\n  /* get proudct list from redux store  */\n  // const productList = useSelector((state) => state.productList);\n\n  /* get data from the product list */\n  // const [loading, error, products] = productList;\n\n  const [loading, setLoading] = useState(false);\n  const [products, setProducts] = useState([]);\n  const [error, setError] = useState(false);\n  /* Send request to backend (Should run once) */\n\n  useEffect(() => {\n    dispatch(listProducts());\n    /* define the \"fetch function\" use the products api to get all product info and store into data array */\n\n    const fetchData = async () => {\n      /* try to load products, monitoring loading progress, and catch loading errors */\n      try {\n        setLoading(true);\n        const {\n          data\n        } = await Axios.get('/api/products');\n        setLoading(false);\n        setProducts(data);\n      }\n      /* loading errors - properly catch and notify user of the errors */\n      catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    /* Call fetch data function - action to build data array */\n\n\n    fetchData();\n  }, [dispatch]);\n  /* Homescreen Redering */\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(LoadingBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 24\n    }\n  }) : error ? /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 59\n    }\n  }, error) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, products.map(product => /*#__PURE__*/React.createElement(Product, {\n    key: product._id,\n    product: product,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }))));\n}\n\n_s(HomeScreen, \"fAhDFnngz7Vi1QD3Cqsm4CmDedA=\", false, function () {\n  return [useDispatch];\n});\n\n_c = HomeScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"sources":["/Users/smoke/Desktop/EZTechWebsite/frontend/src/Screens/HomeScreen.js"],"names":["React","useEffect","useState","Axios","Product","LoadingBox","MessageBox","useDispatch","useSelector","listProducts","HomeScreen","dispatch","loading","setLoading","products","setProducts","error","setError","fetchData","data","get","err","message","map","product","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAASC,YAAT,QAA6B,2BAA7B,C,CAEA;;AAEA,eAAe,SAASC,UAAT,GAAqB;AAAA;;AAEhC;AACA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA;AACA;;AAEA;AACA;;AAEA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAK,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,KAAD,CAAjC;AAEA;;AACAD,EAAAA,SAAS,CAAC,MAAM;AAEZU,IAAAA,QAAQ,CAACF,YAAY,EAAb,CAAR;AAGA;;AACA,UAAMS,SAAS,GAAG,YAAY;AAE1B;AACA,UAAG;AAECL,QAAAA,UAAU,CAAC,IAAD,CAAV;AACA,cAAM;AAACM,UAAAA;AAAD,YAAS,MAAMhB,KAAK,CAACiB,GAAN,CAAU,eAAV,CAArB;AACAP,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,QAAAA,WAAW,CAACI,IAAD,CAAX;AACH;AAED;AACA,aAAOE,GAAP,EAAW;AAEPJ,QAAAA,QAAQ,CAACI,GAAG,CAACC,OAAL,CAAR;AACAT,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AAEJ,KAlBD;AAoBA;;;AACAK,IAAAA,SAAS;AAEZ,GA7BQ,EA6BN,CAACP,QAAD,CA7BM,CAAT;AAgCA;;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKC,OAAO,gBAAG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA+BI,KAAK,gBAAE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,KAA9B,CAAF,gBAC5C;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,QAAQ,CAACS,GAAT,CAAcC,OAAD,iBACV,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,OAAO,CAACC,GAAtB;AAA2B,IAAA,OAAO,EAAED,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CAHJ,CADJ;AAYH;;GA/DuBd,U;UAGHH,W;;;KAHGG,U","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport Axios from 'axios';\nimport Product from \"../componets/Product\";\nimport LoadingBox from \"../componets/LoadingBox\";\nimport MessageBox from \"../componets/MessageBox\";\nimport {useDispatch, useSelector } from \"react-redux\";\nimport { listProducts } from \"../actions/ProductActions\";\n\n// import data from \"../data\";\n\nexport default function HomeScreen(){\n\n    /* use to get redux actions from within  */\n    const dispatch = useDispatch();\n\n    /* get proudct list from redux store  */\n    // const productList = useSelector((state) => state.productList);\n\n    /* get data from the product list */\n    // const [loading, error, products] = productList;\n\n    const [loading, setLoading] = useState(false);\n\n    const [products, setProducts] = useState([]);\n\n    const[error, setError] = useState(false);\n    \n    /* Send request to backend (Should run once) */\n    useEffect(() => {\n\n        dispatch(listProducts());\n\n \n        /* define the \"fetch function\" use the products api to get all product info and store into data array */\n        const fetchData = async () => {\n\n            /* try to load products, monitoring loading progress, and catch loading errors */\n            try{\n\n                setLoading(true);\n                const {data} = await Axios.get('/api/products');\n                setLoading(false);\n                setProducts(data);\n            }\n\n            /* loading errors - properly catch and notify user of the errors */\n            catch (err){\n\n                setError(err.message);\n                setLoading(false);\n            }\n            \n        };\n\n        /* Call fetch data function - action to build data array */\n        fetchData();\n\n    }, [dispatch]);\n\n\n    /* Homescreen Redering */\n    return (\n        <div>\n            {/* if loading is true - render data */}\n            {loading? (<LoadingBox></LoadingBox>): error?(<MessageBox variant=\"danger\">{error}</MessageBox>):(\n            <div className=\"row center\">\n                {products.map((product) => (\n                    <Product key={product._id} product={product}></Product>\n                ))}\n            </div>\n            )}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}