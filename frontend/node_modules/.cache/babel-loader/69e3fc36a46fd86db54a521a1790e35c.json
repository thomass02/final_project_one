{"ast":null,"code":"var _jsxFileName = \"/Users/smoke/AndroidStudioProjects/New_Project/EZTechWebsite/frontend/src/componets/Test2.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\nimport { render } from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Test2 extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        value: event.target.value\n      });\n    };\n\n    this.state = {};\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  /* track value of state when submit is clicked */\n\n\n  handleSubmit(event) {\n    alert('test' + this.state.value);\n    event.preventDefault();\n  }\n  /* track value of state when new slection occurs */\n\n\n  /* Check to make sure we do not have duplicate objects for filtering */\n  getUnique(arr, comp) {\n    const unique = arr\n    /* store the values to compare into the array */\n    .map(e => e[comp]).map((e, i, final))\n    /* remove the dups and keep only the unique values */\n    .filter(e => arr[e]).map(e => arr[e]);\n    return unique;\n  }\n\n  render() {\n    const devices = require('./devicesTest.json');\n\n    const uniqueDevice = this.getUnique(devices.type, \"name\");\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Please select the device type that you are interested in purchsing \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          children: uniqueDevice.map(device => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: device.name,\n            children: device.name\n          }, device._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/smoke/AndroidStudioProjects/New_Project/EZTechWebsite/frontend/src/componets/Test2.js"],"names":["React","useEffect","useState","ThemeConsumer","render","Test2","Component","constructor","props","handleChange","event","setState","value","target","state","handleSubmit","bind","alert","preventDefault","getUnique","arr","comp","unique","map","e","i","final","filter","devices","require","uniqueDevice","type","device","name","_id"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,eAAe,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAmC;AAE9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAEX,UAAMA,KAAN;;AAFW,SAkBnBC,YAlBmB,GAkBJC,KAAK,IAAI;AAEpB,WAAKC,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAEF,KAAK,CAACG,MAAN,CAAaD;AAArB,OAAd;AAEH,KAtBkB;;AAGX,SAAKE,KAAL,GAAa,EAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;AAGL;;;AACAD,EAAAA,YAAY,CAACL,KAAD,EAAO;AAEfO,IAAAA,KAAK,CAAC,SAAS,KAAKH,KAAL,CAAWF,KAArB,CAAL;AACAF,IAAAA,KAAK,CAACQ,cAAN;AACH;AAED;;;AAOA;AACAC,EAAAA,SAAS,CAACC,GAAD,EAAMC,IAAN,EAAW;AAEhB,UAAMC,MAAM,GAAGF;AAEf;AAFkB,KAGjBG,GAHc,CAGVC,CAAC,IAAIA,CAAC,CAACH,IAAD,CAHI,EAKdE,GALc,EAKTC,CAAC,EAACC,CAAD,EAAIC,KALI;AAMf;AANe,KAOdC,MAPc,CAOPH,CAAC,IAAIJ,GAAG,CAACI,CAAD,CAPD,EAUdD,GAVc,CAUVC,CAAC,IAAIJ,GAAG,CAACI,CAAD,CAVE,CAAf;AAYA,WAAOF,MAAP;AACH;;AAEDlB,EAAAA,MAAM,GAAE;AAEJ,UAAMwB,OAAO,GAAGC,OAAO,CAAC,oBAAD,CAAvB;;AACA,UAAMC,YAAY,GAAG,KAAKX,SAAL,CAAeS,OAAO,CAACG,IAAvB,EAA6B,MAA7B,CAArB;AAEA,wBAEA;AAAM,MAAA,QAAQ,EAAE,KAAKhB,YAArB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAA,oBACKe,YAAY,CAACP,GAAb,CAAiBS,MAAM,iBACpB;AAAyB,YAAA,KAAK,EAAEA,MAAM,CAACC,IAAvC;AAAA,sBACKD,MAAM,CAACC;AADZ,aAAaD,MAAM,CAACE,GAApB;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAcI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAdJ,eAeI;AAAA;AAAA;AAAA;AAAA,cAfJ,eAgBI;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAqBH;;AAtE6C","sourcesContent":["\nimport React, { useEffect, useState} from \"react\";\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\nimport { render } from \"react-dom\";\n\nexport default class Test2 extends React.Component{\n    \n    constructor(props) {\n\n            super(props);\n            this.state = {                   \n            };\n\n            this.handleSubmit = this.handleSubmit.bind(this);\n        }\n\n    \n    /* track value of state when submit is clicked */\n    handleSubmit(event){\n\n        alert('test' + this.state.value);\n        event.preventDefault();\n    }\n\n    /* track value of state when new slection occurs */\n    handleChange = event => {\n\n        this.setState({value: event.target.value});\n\n    }\n\n    /* Check to make sure we do not have duplicate objects for filtering */\n    getUnique(arr, comp){\n\n        const unique = arr\n\n        /* store the values to compare into the array */\n        .map(e => e[comp])\n\n        .map((e,i, final) )\n        /* remove the dups and keep only the unique values */\n        .filter(e => arr[e])\n\n\n        .map(e => arr[e]);\n\n        return unique;\n    }\n\n    render(){\n\n        const devices = require('./devicesTest.json');\n        const uniqueDevice = this.getUnique(devices.type, \"name\");\n\n        return(\n\n        <form onSubmit={this.handleSubmit}>\n            <br />\n            <br />\n            <label>\n                <h2>Please select the device type that you are interested in purchsing </h2>\n                \n                <select>\n                    {uniqueDevice.map(device => (\n                        <option key={device._id} value={device.name}>\n                            {device.name}\n                        </option>\n                    ))}\n                </select>\n            </label>\n            <input type='submit' value=\"Submit\" />\n            <br />\n            <br />\n        </form>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}