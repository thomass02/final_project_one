{"ast":null,"code":"var _jsxFileName = \"/Users/smoke/AndroidStudioProjects/New_Project/EZTechWebsite/frontend/src/Screens/SelectScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\"; // import Axios from 'axios';\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport MessageBox from \"../componets/MessageBox\";\nimport LoadingBox from \"../componets/LoadingBox\";\nimport { listDevices } from \"../actions/ProductActions\";\nimport DropDown from \"../componets/DropDown\";\nimport MultiDropDown from \"../componets/MultiDropDown\";\nexport default function SelectScreen() {\n  _s();\n\n  /* use to get redux actions from within  */\n  const dispatch = useDispatch();\n  /* get device list from redux store  */\n\n  const deviceList = useSelector(state => state.deviceList);\n  /* get data from the product list */\n\n  const {\n    loading,\n    error,\n    devices\n  } = deviceList;\n  /* Send request to backend (Should run once) */\n\n  useEffect(() => {\n    dispatch(listDevices());\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(LoadingBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 24\n    }\n  }) : error ? /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 59\n    }\n  }, error) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, devices.map(device => /*#__PURE__*/React.createElement(DropDown, {\n    key: device._id,\n    device: device,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }) // <MultiDropDown>key={device._id} device={device}</MultiDropDown>\n  )), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 1\n    }\n  }));\n}\n\n_s(SelectScreen, \"xd/Y5M+PL8/zfLFsRG/uH2y23fY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SelectScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectScreen\");","map":{"version":3,"sources":["/Users/smoke/AndroidStudioProjects/New_Project/EZTechWebsite/frontend/src/Screens/SelectScreen.js"],"names":["React","useEffect","useDispatch","useSelector","MessageBox","LoadingBox","listDevices","DropDown","MultiDropDown","SelectScreen","dispatch","deviceList","state","loading","error","devices","map","device","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAwC,aAAxC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,WAAT,QAA2B,2BAA3B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAGA,eAAe,SAASC,YAAT,GAAuB;AAAA;;AAElC;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEA;;AACA,QAAMS,UAAU,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACD,UAAlB,CAA9B;AAEA;;AACA,QAAM;AAACE,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAA4BJ,UAAlC;AAEA;;AACAV,EAAAA,SAAS,CAAC,MAAM;AAEZS,IAAAA,QAAQ,CAACJ,WAAW,EAAZ,CAAR;AAEH,GAJQ,EAIN,CAACI,QAAD,CAJM,CAAT;AAMA,sBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUKG,OAAO,gBAAG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA+BC,KAAK,gBAAE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,KAA9B,CAAF,gBAG5C;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAESC,OAAO,CAACC,GAAR,CAAaC,MAAD,iBACb,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,MAAM,CAACC,GAAtB;AAA2B,IAAA,MAAM,EAAED,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADa,CAEb;AAFC,GAFT,CAbJ,eAwBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBQ,CAFJ;AAkCH;;GApDuBR,Y;UAGHP,W,EAGEC,W;;;KANCM,Y","sourcesContent":["import React, {useEffect} from \"react\";\n// import Axios from 'axios';\nimport {useDispatch, useSelector } from \"react-redux\";\nimport MessageBox from \"../componets/MessageBox\";\nimport LoadingBox from \"../componets/LoadingBox\";\nimport { listDevices} from \"../actions/ProductActions\";\nimport DropDown from \"../componets/DropDown\";\nimport MultiDropDown from \"../componets/MultiDropDown\";\n\n\nexport default function SelectScreen(){\n\n    /* use to get redux actions from within  */\n    const dispatch = useDispatch();\n\n    /* get device list from redux store  */\n    const deviceList = useSelector((state) => state.deviceList);\n\n    /* get data from the product list */\n    const {loading, error, devices} = deviceList;\n    \n    /* Send request to backend (Should run once) */\n    useEffect(() => {\n\n        dispatch(listDevices());\n\n    }, [dispatch]);\n    \n    return (\n\n        <div>\n            {/* <select>\n                <option selected=\"true\"> Select Device</option>\n                <option>Routers</option>\n                <option>Modems</option>\n                <option>Laptops</option>\n                <option>Webcams</option>\n            </select> */}\n        \n            {/* if loading is true - render data, if not display error message */}\n            {loading? (<LoadingBox></LoadingBox>): error?(<MessageBox variant=\"danger\">{error}</MessageBox>):(\n\n\n            <div className=\"row center\">\n                \n                    {devices.map((device) => (\n                    <DropDown key={device._id} device={device}></DropDown>\n                    // <MultiDropDown>key={device._id} device={device}</MultiDropDown>\n                    ))}\n            </div>\n\n            \n            )}\n\n<div>\n            \n            </div>\n        </div>\n\n        \n    );\n\n}"]},"metadata":{},"sourceType":"module"}