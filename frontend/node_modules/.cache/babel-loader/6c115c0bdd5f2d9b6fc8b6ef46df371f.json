{"ast":null,"code":"import Axios from \"axios\";\nimport { USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT } from \"../constants/userConstant\";\nexport const signin = (email, password) => async dispatch => {\n  /* first state - request */\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    /* login credentials successful - dispatch success */\n    const {\n      data\n    } = await Axios.post('/api/users/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    /* keep user signin even if user closes browser */\n\n    localStorage.setItem('userData', JSON.stringify(data));\n  } catch (err) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload:\n      /*  backend failure */\n      err.response && err.response.data.message\n      /* render the error message from backend */\n      ? err.response.data.message\n      /* otherwise, diplay the generic error message */\n      : err.message\n    });\n  }\n};\n/* remove persistance of signed in user from local storage */\n\nexport const signout = () => {\n  /* remove user data and saved cart items */\n  localStorage.removeItem('userData');\n  localStorage.removeItem('cartItems');\n  /* dispatch new state */\n\n  dispatch({\n    type: USER_SIGNOUT,\n    payload: ''\n  });\n};","map":{"version":3,"sources":["/Users/smoke/AndroidStudioProjects/New_Project/EZTechWebsite/frontend/src/actions/userActions.js"],"names":["Axios","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","signin","email","password","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","err","response","message","signout","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,EAAgDC,mBAAhD,EAAqEC,YAArE,QAAyF,2BAAzF;AAEA,OAAO,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAMC,QAAN,IAAkB;AAEzD;AACAA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEP,mBAAP;AAA4BQ,IAAAA,OAAO,EAAE;AAACJ,MAAAA,KAAD;AAAQC,MAAAA;AAAR;AAArC,GAAD,CAAR;;AAEA,MAAG;AAEC;AACA,UAAM;AAACI,MAAAA;AAAD,QAAS,MAAMX,KAAK,CAACY,IAAN,CAAW,mBAAX,EAAgC;AAACN,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAhC,CAArB;AACAC,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACN,mBAAN;AAA2BO,MAAAA,OAAO,EAAEC;AAApC,KAAD,CAAR;AAEA;;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAjC;AAEH,GATD,CAWA,OAAMM,GAAN,EAAU;AAENT,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAER,gBADD;AACmBS,MAAAA,OAAO;AAE/B;AACAO,MAAAA,GAAG,CAACC,QAAJ,IAAgBD,GAAG,CAACC,QAAJ,CAAaP,IAAb,CAAkBQ;AAElC;AAFA,QAGEF,GAAG,CAACC,QAAJ,CAAaP,IAAb,CAAkBQ;AAEpB;AALA,QAMEF,GAAG,CAACE;AAVD,KAAD,CAAR;AAYH;AACJ,CA/BM;AAiCP;;AACA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAEzB;AACAP,EAAAA,YAAY,CAACQ,UAAb,CAAwB,UAAxB;AACAR,EAAAA,YAAY,CAACQ,UAAb,CAAwB,WAAxB;AAEA;;AACAb,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEL,YAAP;AAAqBM,IAAAA,OAAO,EAAC;AAA7B,GAAD,CAAR;AAEH,CATM","sourcesContent":["import Axios  from \"axios\";\nimport { USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT } from \"../constants/userConstant\"\n\nexport const signin = (email, password) => async(dispatch) =>{\n\n    /* first state - request */\n    dispatch({type: USER_SIGNIN_REQUEST, payload: {email, password}});\n\n    try{\n\n        /* login credentials successful - dispatch success */\n        const {data} = await Axios.post('/api/users/signin', {email, password});\n        dispatch({type:USER_SIGNIN_SUCCESS, payload: data});\n\n        /* keep user signin even if user closes browser */\n        localStorage.setItem('userData', JSON.stringify(data));\n\n    }\n\n    catch(err){\n\n        dispatch({\n            type: USER_SIGNIN_FAIL, payload:\n\n            /*  backend failure */\n            err.response && err.response.data.message\n          \n            /* render the error message from backend */\n            ? err.response.data.message\n\n            /* otherwise, diplay the generic error message */\n            : err.message,\n        });\n    }\n}\n\n/* remove persistance of signed in user from local storage */\nexport const signout = () => {\n\n    /* remove user data and saved cart items */\n    localStorage.removeItem('userData');\n    localStorage.removeItem('cartItems');\n    \n    /* dispatch new state */\n    dispatch({type: USER_SIGNOUT, payload:''});\n\n};"]},"metadata":{},"sourceType":"module"}