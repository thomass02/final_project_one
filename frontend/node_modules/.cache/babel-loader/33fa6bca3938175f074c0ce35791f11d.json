{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/CartConstant\";\nexport const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    cartItems: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      /* get the item being added to the cart */\n      const item = action.payload;\n      /* determine if the item is already in the cart or not */\n\n      const existItem = state.cartItems.find(x => x.product === item.product);\n      /* item is already in the cart, just need to update it */\n\n      if (existItem) {\n        return { ...state,\n\n          /* if the same item is added there may be some differences added - \n          check to see that an update as nessessary\n           */\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      }\n      /* new item added */\n      else {\n        /* add new items \"item\" to existing items \"...state.cartItems\" */\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      /* add new items \"item\" to existing items \"...state.cartItems\" */\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/smoke/Desktop/EZTechWebsite/frontend/src/reducers/CartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","map","filter"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,QAAgD,2BAAhD;AAEA,OAAO,MAAMC,WAAW,GAAG,YAAoC;AAAA,MAAnCC,KAAmC,uEAA3B;AAACC,IAAAA,SAAS,EAAC;AAAX,GAA2B;AAAA,MAAXC,MAAW;;AAE3D,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKN,aAAL;AAEI;AACA,YAAMO,IAAI,GAAGF,MAAM,CAACG,OAApB;AAEA;;AACA,YAAMC,SAAS,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA/C,CAAlB;AAEA;;AACA,UAAGH,SAAH,EAAa;AAET,eAAM,EAEF,GAAGN,KAFD;;AAGF;AACpB;AACA;AAEoBC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAqBF,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CAApE;AAPT,SAAN;AASH;AACD;AAZA,WAaK;AAED;AACA,eAAO,EAAC,GAAGR,KAAJ;AAAWC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AAAtB,SAAP;AACH;;AAEL,SAAKN,gBAAL;AAEoB;AAEhB,aAAO,EAAC,GAAGE,KAAJ;AAAWC,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,MAAhB,CAAuBH,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcP,MAAM,CAACG,OAAjD;AAAtB,OAAP;;AAEJ;AACI,aAAOL,KAAP;AArCR;AAuCH,CAzCM","sourcesContent":["import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/CartConstant\";\n\nexport const cartReducer = (state = {cartItems:[]}, action) => {\n\n    switch(action.type){\n\n        case CART_ADD_ITEM:\n\n            /* get the item being added to the cart */\n            const item = action.payload;\n\n            /* determine if the item is already in the cart or not */\n            const existItem = state.cartItems.find((x) => x.product === item.product);\n\n            /* item is already in the cart, just need to update it */\n            if(existItem){\n\n                return{\n\n                    ...state,\n                    /* if the same item is added there may be some differences added - \n                    check to see that an update as nessessary\n                     */\n                    \n                    cartItems: state.cartItems.map((x) => x.product === existItem.product ? item : x),\n                };\n            }\n            /* new item added */\n            else {\n\n                /* add new items \"item\" to existing items \"...state.cartItems\" */\n                return {...state, cartItems: [...state.cartItems, item]};\n            }\n\n        case CART_REMOVE_ITEM:\n\n                            /* add new items \"item\" to existing items \"...state.cartItems\" */\n\n            return {...state, cartItems: state.cartItems.filter(x => x.product !== action.payload),};\n\n        default:\n            return state;\n    }\n};"]},"metadata":{},"sourceType":"module"}