{"ast":null,"code":"var _jsxFileName = \"/Users/smoke/Desktop/EZTechWebsite/frontend/src/Screens/HomeScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\"; // import axios from 'axios';\n\nimport Product from \"../componets/Product\";\nimport LoadingBox from \"../componets/LoadingBox\";\nimport MessageBox from \"../componets/MessageBox\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listProducts } from \"../actions/ProductActions\"; // import data from \"../data\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomeScreen() {\n  _s();\n\n  /* use to get redux actions from within  */\n  const dispatch = useDispatch();\n  /* get proudct list from redux store  */\n\n  const productList = useSelector(state => state.productList);\n  /* get data from the product list */\n\n  const {\n    loading,\n    error,\n    products\n  } = productList;\n  /* Send request to backend */\n\n  useEffect(() => {\n    dispatch(listProducts());\n  }, []);\n  /* define the \"fetch function\" use the products api to get all product info and store into data array */\n  // const fetchData = async () => {\n  //     /* try to load products, monitoring loading progress, and catch loading errors */\n  //     try{\n  //         setLoading(true);\n  //         const {data} = await axios.get('/api/products');\n  //         setLoading(false);\n  //         setProducts(data);\n  //     }\n  //     /* loading errors - properly catch and notify user of the errors */\n  //     catch (err){\n  //         setError(err.message);\n  //         setLoading(false);\n  //     }\n  // };\n  // /* Call fetch data function - action to build data array */\n  // fetchData();\n  // }, []);\n\n  /* Homescreen Redering */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 24\n    }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 59\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row center\",\n      children: products.map(product => /*#__PURE__*/_jsxDEV(Product, {\n        product: product\n      }, product._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HomeScreen, \"+Kfo5mv+5h4frBKGytIisQkXo2Y=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = HomeScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"sources":["/Users/smoke/Desktop/EZTechWebsite/frontend/src/Screens/HomeScreen.js"],"names":["React","useEffect","Product","LoadingBox","MessageBox","useDispatch","useSelector","listProducts","HomeScreen","dispatch","productList","state","loading","error","products","map","product","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAASC,YAAT,QAA6B,2BAA7B,C,CAEA;;;AAEA,eAAe,SAASC,UAAT,GAAqB;AAAA;;AAEhC;AACA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA;;AACA,QAAMK,WAAW,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACD,WAAlB,CAA/B;AAEA;;AACA,QAAM;AAACE,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAA6BJ,WAAnC;AAIA;;AACAT,EAAAA,SAAS,CAAC,MAAM;AAEZQ,IAAAA,QAAQ,CAACF,YAAY,EAAb,CAAR;AAEH,GAJQ,EAIN,EAJM,CAAT;AAKI;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEJ;;AAGA;;AACA,sBACI;AAAA,cACKK,OAAO,gBAAG,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAA+BC,KAAK,gBAAE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,QAApB;AAAA,gBAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,YAAF,gBAC5C;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACKC,QAAQ,CAACC,GAAT,CAAcC,OAAD,iBACV,QAAC,OAAD;AAA2B,QAAA,OAAO,EAAEA;AAApC,SAAcA,OAAO,CAACC,GAAtB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GA1DuBT,U;UAGHH,W,EAGGC,W;;;KANAE,U","sourcesContent":["import React, {useEffect} from \"react\";\n// import axios from 'axios';\nimport Product from \"../componets/Product\";\nimport LoadingBox from \"../componets/LoadingBox\";\nimport MessageBox from \"../componets/MessageBox\";\nimport {useDispatch, useSelector } from \"react-redux\";\nimport { listProducts } from \"../actions/ProductActions\";\n\n// import data from \"../data\";\n\nexport default function HomeScreen(){\n\n    /* use to get redux actions from within  */\n    const dispatch = useDispatch();\n\n    /* get proudct list from redux store  */\n    const productList = useSelector((state) => state.productList);\n\n    /* get data from the product list */\n    const {loading, error, products} = productList;\n\n    \n\n    /* Send request to backend */\n    useEffect(() => {\n\n        dispatch(listProducts());\n\n    }, []);\n        /* define the \"fetch function\" use the products api to get all product info and store into data array */\n        // const fetchData = async () => {\n\n        //     /* try to load products, monitoring loading progress, and catch loading errors */\n        //     try{\n\n        //         setLoading(true);\n        //         const {data} = await axios.get('/api/products');\n        //         setLoading(false);\n        //         setProducts(data);\n        //     }\n\n        //     /* loading errors - properly catch and notify user of the errors */\n        //     catch (err){\n\n        //         setError(err.message);\n        //         setLoading(false);\n        //     }\n            \n        // };\n\n        // /* Call fetch data function - action to build data array */\n        // fetchData();\n\n    // }, []);\n\n\n    /* Homescreen Redering */\n    return (\n        <div>\n            {loading? (<LoadingBox></LoadingBox>): error?(<MessageBox variant=\"danger\">{error}</MessageBox>):(\n            <div className=\"row center\">\n                {products.map((product) => (\n                    <Product key={product._id} product={product}></Product>\n                ))}\n            </div>\n            )}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}