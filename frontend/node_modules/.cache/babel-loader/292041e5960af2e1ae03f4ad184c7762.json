{"ast":null,"code":"var _jsxFileName = \"/Users/smoke/AndroidStudioProjects/New_Project/EZTechWebsite/frontend/src/Screens/HomeScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\"; // import Axios from 'axios';\n\nimport Product from \"../componets/Product\";\nimport LoadingBox from \"../componets/LoadingBox\";\nimport MessageBox from \"../componets/MessageBox\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listProducts } from \"../actions/ProductActions\"; // import data from \"../data\";\n\nexport default function HomeScreen() {\n  _s();\n\n  /* use to get redux actions from within  */\n  const dispatch = useDispatch();\n  /* get proudct list from redux store  */\n\n  const productList = useSelector(state => state.productList);\n  /* get data from the product list */\n\n  const {\n    loading,\n    error,\n    products\n  } = productList; // const [loading, setLoading] = useState(false);\n  // const [products, setProducts] = useState([]);\n  // const[error, setError] = useState(false);\n\n  /* Send request to backend (Should run once) */\n\n  useEffect(() => {\n    dispatch(listProducts());\n    /* define the \"fetch function\" use the products api to get all product info and store into data array */\n    // const fetchData = async () => {\n    //     /* try to load products, monitoring loading progress, and catch loading errors */\n    //     try{\n    //         // setLoading(true);\n    //         const {data} = await Axios.get('/api/products');\n    //         // setLoading(false);\n    //         // setProducts(data);\n    //     }\n    //     /* loading errors - properly catch and notify user of the errors */\n    //     catch (err){\n    //         // setError(err.message);\n    //         // setLoading(false);\n    //     }\n    // };\n    // /* Call fetch data function - action to build data array */\n    // fetchData();\n  }, [dispatch]);\n  /* Homescreen Redering */\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row_top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"1\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"2\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"3\"))), loading ? /*#__PURE__*/React.createElement(LoadingBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 24\n    }\n  }) : error ? /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 59\n    }\n  }, error) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, products.map(product => /*#__PURE__*/React.createElement(Product, {\n    key: product._id,\n    product: product,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }))));\n}\n\n_s(HomeScreen, \"+Kfo5mv+5h4frBKGytIisQkXo2Y=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = HomeScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"sources":["/Users/smoke/AndroidStudioProjects/New_Project/EZTechWebsite/frontend/src/Screens/HomeScreen.js"],"names":["React","useEffect","Product","LoadingBox","MessageBox","useDispatch","useSelector","listProducts","HomeScreen","dispatch","productList","state","loading","error","products","map","product","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAASC,YAAT,QAA6B,2BAA7B,C,CAEA;;AAEA,eAAe,SAASC,UAAT,GAAqB;AAAA;;AAEhC;AACA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA;;AACA,QAAMK,WAAW,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACD,WAAlB,CAA/B;AAEA;;AACA,QAAM;AAACE,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAA6BJ,WAAnC,CATgC,CAWhC;AAEA;AAEA;;AAEA;;AACAT,EAAAA,SAAS,CAAC,MAAM;AAEZQ,IAAAA,QAAQ,CAACF,YAAY,EAAb,CAAR;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEH,GA7BQ,EA6BN,CAACE,QAAD,CA7BM,CAAT;AAgCA;;AACA,sBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADA,eAEA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFA,eAGA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHA,CADJ,CADJ,EAUKG,OAAO,gBAAG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA+BC,KAAK,gBAAE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,KAA9B,CAAF,gBAE5C;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKC,QAAQ,CAACC,GAAT,CAAcC,OAAD,iBACV,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,OAAO,CAACC,GAAtB;AAA2B,IAAA,OAAO,EAAED,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAFL,CAZJ,CAFJ;AAuBH;;GA1EuBR,U;UAGHH,W,EAGGC,W;;;KANAE,U","sourcesContent":["import React, {useEffect} from \"react\";\n// import Axios from 'axios';\nimport Product from \"../componets/Product\";\nimport LoadingBox from \"../componets/LoadingBox\";\nimport MessageBox from \"../componets/MessageBox\";\nimport {useDispatch, useSelector } from \"react-redux\";\nimport { listProducts } from \"../actions/ProductActions\";\n\n// import data from \"../data\";\n\nexport default function HomeScreen(){\n\n    /* use to get redux actions from within  */\n    const dispatch = useDispatch();\n\n    /* get proudct list from redux store  */\n    const productList = useSelector((state) => state.productList);\n\n    /* get data from the product list */\n    const {loading, error, products} = productList;\n\n    // const [loading, setLoading] = useState(false);\n\n    // const [products, setProducts] = useState([]);\n\n    // const[error, setError] = useState(false);\n    \n    /* Send request to backend (Should run once) */\n    useEffect(() => {\n\n        dispatch(listProducts());\n\n \n        /* define the \"fetch function\" use the products api to get all product info and store into data array */\n        // const fetchData = async () => {\n\n        //     /* try to load products, monitoring loading progress, and catch loading errors */\n        //     try{\n\n        //         // setLoading(true);\n        //         const {data} = await Axios.get('/api/products');\n        //         // setLoading(false);\n        //         // setProducts(data);\n        //     }\n\n        //     /* loading errors - properly catch and notify user of the errors */\n        //     catch (err){\n\n        //         // setError(err.message);\n        //         // setLoading(false);\n        //     }\n            \n        // };\n\n        // /* Call fetch data function - action to build data array */\n        // fetchData();\n\n    }, [dispatch]);\n\n\n    /* Homescreen Redering */\n    return (\n\n        <div>\n            <div className=\"row_top\">\n                <div>\n                <div className=\"col-2\">1</div>\n                <div className=\"col-2\">2</div>\n                <div className=\"col-2\">3</div>\n                </div>\n            </div>\n\n            {/* if loading is true - render data, if not display error message */}\n            {loading? (<LoadingBox></LoadingBox>): error?(<MessageBox variant=\"danger\">{error}</MessageBox>):(\n\n            <div className=\"row center\">\n               \n                {products.map((product) => (\n                    <Product key={product._id} product={product}></Product>\n                ))}\n            </div>\n            )}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}