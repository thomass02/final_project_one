{"ast":null,"code":"var _jsxFileName = \"/Users/smoke/AndroidStudioProjects/New_Project/EZTechWebsite/frontend/src/Screens/HomeScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\"; // import Axios from 'axios';\n\nimport Product from \"../componets/Product\";\nimport LoadingBox from \"../componets/LoadingBox\";\nimport MessageBox from \"../componets/MessageBox\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listProducts } from \"../actions/ProductActions\";\nimport DeviceDropDown from \"../componets/DeviceDropDown\"; // import data from \"../data\";\n\nexport default function HomeScreen() {\n  _s();\n\n  /* use to get redux actions from within  */\n  const dispatch = useDispatch();\n  /* get prouductlist from redux store  */\n\n  const productList = useSelector(state => state.productList);\n  /* get data from the product list */\n\n  const {\n    loading,\n    error,\n    products\n  } = productList; // const [loading, setLoading] = useState(false);\n  // const [products, setProducts] = useState([]);\n  // const[error, setError] = useState(false);\n\n  /* Send request to backend (Should run once) */\n\n  useEffect(() => {\n    dispatch(listProducts());\n    /* define the \"fetch function\" use the products api to get all product info and store into data array */\n    // const fetchData = async () => {\n    //     /* try to load products, monitoring loading progress, and catch loading errors */\n    //     try{\n    //         // setLoading(true);\n    //         const {data} = await Axios.get('/api/products');\n    //         // setLoading(false);\n    //         // setProducts(data);\n    //     }\n    //     /* loading errors - properly catch and notify user of the errors */\n    //     catch (err){\n    //         // setError(err.message);\n    //         // setLoading(false);\n    //     }\n    // };\n    // /* Call fetch data function - action to build data array */\n    // fetchData();\n  }, [dispatch]);\n  /* Homescreen Redering */\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Device Type\"), /*#__PURE__*/React.createElement(\"select\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    selected: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \" Select Device\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"Routers\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"Modems\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"Laptops\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, \"Webcams\")), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    class: \"btn btn-secondary dropdown-toggle\",\n    type: \"button\",\n    id: \"dropdownMenu2\",\n    \"data-toggle\": \"dropdown\",\n    \"aria-haspopup\": \"true\",\n    \"aria-expanded\": \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 3\n    }\n  }, \"Dropdown\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"dropdown-menu\",\n    \"aria-labelledby\": \"dropdownMenu2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    class: \"dropdown-item\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, \"Action\"), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"dropdown-item\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, \"Another action\"), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"dropdown-item\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, \"Something else here\"))), loading ? /*#__PURE__*/React.createElement(LoadingBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 24\n    }\n  }) : error ? /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 59\n    }\n  }, error) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, products.map(product => /*#__PURE__*/React.createElement(Product, {\n    key: product._id,\n    product: product,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }))));\n}\n\n_s(HomeScreen, \"+Kfo5mv+5h4frBKGytIisQkXo2Y=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = HomeScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"sources":["/Users/smoke/AndroidStudioProjects/New_Project/EZTechWebsite/frontend/src/Screens/HomeScreen.js"],"names":["React","useEffect","Product","LoadingBox","MessageBox","useDispatch","useSelector","listProducts","DeviceDropDown","HomeScreen","dispatch","productList","state","loading","error","products","map","product","_id"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\n// import Axios from 'axios';\nimport Product from \"../componets/Product\";\nimport LoadingBox from \"../componets/LoadingBox\";\nimport MessageBox from \"../componets/MessageBox\";\nimport {useDispatch, useSelector } from \"react-redux\";\nimport { listProducts} from \"../actions/ProductActions\";\nimport DeviceDropDown from \"../componets/DeviceDropDown\";\n\n// import data from \"../data\";\n\nexport default function HomeScreen(){\n\n    /* use to get redux actions from within  */\n    const dispatch = useDispatch();\n\n    /* get prouductlist from redux store  */\n    const productList = useSelector((state) => state.productList);\n\n    /* get data from the product list */\n    const {loading, error, products} = productList;\n\n    // const [loading, setLoading] = useState(false);\n\n    // const [products, setProducts] = useState([]);\n\n    // const[error, setError] = useState(false);\n    \n    /* Send request to backend (Should run once) */\n    useEffect(() => {\n\n        dispatch(listProducts());\n\n \n        /* define the \"fetch function\" use the products api to get all product info and store into data array */\n        // const fetchData = async () => {\n\n        //     /* try to load products, monitoring loading progress, and catch loading errors */\n        //     try{\n\n        //         // setLoading(true);\n        //         const {data} = await Axios.get('/api/products');\n        //         // setLoading(false);\n        //         // setProducts(data);\n        //     }\n\n        //     /* loading errors - properly catch and notify user of the errors */\n        //     catch (err){\n\n        //         // setError(err.message);\n        //         // setLoading(false);\n        //     }\n            \n        // };\n\n        // /* Call fetch data function - action to build data array */\n        // fetchData();\n\n    }, [dispatch]);\n    \n    /* Homescreen Redering */\n    return (\n\n       <div>\n            <h2>Device Type</h2>\n                <select>\n                    <option selected=\"true\"> Select Device</option>\n                    <option>Routers</option>\n                    <option>Modems</option>\n                    <option>Laptops</option>\n                    <option>Webcams</option>\n                </select>\n\n                <div class=\"dropdown\">\n  <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenu2\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n    Dropdown\n  </button>\n  <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\n    <button class=\"dropdown-item\" type=\"button\">Action</button>\n    <button class=\"dropdown-item\" type=\"button\">Another action</button>\n    <button class=\"dropdown-item\" type=\"button\">Something else here</button>\n  </div>\n</div>\n         \n\n            {/* if loading is true - render data, if not display error message */}\n            {loading? (<LoadingBox></LoadingBox>): error?(<MessageBox variant=\"danger\">{error}</MessageBox>):(\n\n            <div className=\"row center\">\n               \n                {products.map((product) => (\n                    <Product key={product._id} product={product}></Product>\n                ))}\n            </div>\n            )}\n        </div>\n\n        \n    );\n}"]},"metadata":{},"sourceType":"module"}