{"ast":null,"code":"import { DEVICE_LIST_FAIL, DEVICE_LIST_REQUEST, DEVICE_LIST_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../constants/ProductConstants\";\n/* reducer for product list actions */\n\nexport const productListReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    loading: true,\n    products: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return {\n        loading: true\n      };\n\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload\n      };\n\n    case PRODUCT_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n/* reducer for product details actions */\n\nexport const productDetailsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    loading: true,\n    product: {}\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return {\n        loading: true\n      };\n\n    case PRODUCT_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        product: action.payload\n      };\n\n    case PRODUCT_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n/* reducer for user device slection actions */\n//   export const deviceDropdownReducer = (state = {loading1:true, devices: []}, action) => {\n//     switch(action.type){\n//         case DEVICE_LIST_REQUEST:\n//             return {loading1: true};\n//         case DEVICE_LIST_SUCCESS:\n//             return {loading1: false, devices: action.payload};\n//         case DEVICE_LIST_FAIL:\n//             return {loading1: false, error1: action.payload};\n//         default:\n//             return state;\n//     }\n//   };\n\nlet options = [{\n  key: 1,\n  text: \"this is what's displayed\",\n  value: \"this is the event value\"\n}, {\n  key: 2,\n  text: \"option2\",\n  value: \"value of option 2\"\n}];\nexport const connectReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"connected\";\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    default:\n      return state;\n  }\n}; //manages the options array\n\nexport const optionsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : options;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_DROPDOWN_VALUE:\n      return [...state, action.payload];\n\n    default:\n      return state;\n  }\n}; //manages the selected values array\n\nexport const selectedValuesReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_DROPDOWN_VALUES:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/smoke/AndroidStudioProjects/New_Project/EZTechWebsite/frontend/src/reducers/ProductReducers.js"],"names":["DEVICE_LIST_FAIL","DEVICE_LIST_REQUEST","DEVICE_LIST_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","productListReducer","state","loading","products","action","type","payload","error","productDetailsReducer","product","options","key","text","value","connectReducer","optionsReducer","ADD_DROPDOWN_VALUE","selectedValuesReducer","SET_DROPDOWN_VALUES"],"mappings":"AACA,SAAQA,gBAAR,EAA0BC,mBAA1B,EAA+CC,mBAA/C,EAAoEC,oBAApE,EAA0FC,uBAA1F,EAAmHC,uBAAnH,EAA4IC,iBAA5I,EAA+JC,oBAA/J,EAAqLC,oBAArL,QAAiN,+BAAjN;AAEA;;AACA,OAAO,MAAMC,kBAAkB,GAAG,YAAkD;AAAA,MAAjDC,KAAiD,uEAAzC;AAACC,IAAAA,OAAO,EAAC,IAAT;AAAeC,IAAAA,QAAQ,EAAE;AAAzB,GAAyC;AAAA,MAAXC,MAAW;;AAEhF,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKP,oBAAL;AACI,aAAO;AAACI,QAAAA,OAAO,EAAE;AAAV,OAAP;;AACJ,SAAKH,oBAAL;AACI,aAAO;AAACG,QAAAA,OAAO,EAAE,KAAV;AAAiBC,QAAAA,QAAQ,EAAEC,MAAM,CAACE;AAAlC,OAAP;;AACJ,SAAKT,iBAAL;AACI,aAAO;AAACK,QAAAA,OAAO,EAAE,KAAV;AAAiBK,QAAAA,KAAK,EAAEH,MAAM,CAACE;AAA/B,OAAP;;AACJ;AACI,aAAOL,KAAP;AATR;AAYH,CAdM;AAgBP;;AACC,OAAO,MAAMO,qBAAqB,GAAG,YAAiD;AAAA,MAAhDP,KAAgD,uEAAxC;AAACC,IAAAA,OAAO,EAAE,IAAV;AAAgBO,IAAAA,OAAO,EAAC;AAAxB,GAAwC;AAAA,MAAXL,MAAW;;AAElF,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,uBAAL;AACI,aAAO;AAACO,QAAAA,OAAO,EAAE;AAAV,OAAP;;AACJ,SAAKN,uBAAL;AACI,aAAO;AAACM,QAAAA,OAAO,EAAE,KAAV;AAAiBO,QAAAA,OAAO,EAAEL,MAAM,CAACE;AAAjC,OAAP;;AACJ,SAAKZ,oBAAL;AACI,aAAO;AAACQ,QAAAA,OAAO,EAAE,KAAV;AAAiBK,QAAAA,KAAK,EAAEH,MAAM,CAACE;AAA/B,OAAP;;AACJ;AACI,aAAOL,KAAP;AARR;AAUH,CAZM;AAcN;AACF;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAGA,IAAIS,OAAO,GAAE,CACT;AAACC,EAAAA,GAAG,EAAE,CAAN;AACCC,EAAAA,IAAI,EAAE,0BADP;AAECC,EAAAA,KAAK,EAAE;AAFR,CADS,EAKR;AAACF,EAAAA,GAAG,EAAE,CAAN;AACAC,EAAAA,IAAI,EAAE,SADN;AAEAC,EAAAA,KAAK,EAAE;AAFP,CALQ,CAAb;AAUA,OAAO,MAAMC,cAAc,GAAG,YAA+B;AAAA,MAA9Bb,KAA8B,uEAAvB,WAAuB;AAAA,MAAVG,MAAU;;AACzD,UAAOA,MAAM,CAACC,IAAd;AACI;AACA,aAAOJ,KAAP;AAFJ;AAIH,CALM,C,CAOP;;AACA,OAAO,MAAMc,cAAc,GAAG,YAA0B;AAAA,MAAzBd,KAAyB,uEAAlBS,OAAkB;AAAA,MAATN,MAAS;;AACpD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKW,kBAAL;AACI,aAAO,CAAC,GAAGf,KAAJ,EAAWG,MAAM,CAACE,OAAlB,CAAP;;AACJ;AACA,aAAOL,KAAP;AAJJ;AAMH,CAPM,C,CAUP;;AACA,OAAO,MAAMgB,qBAAqB,GAAG,YAAoB;AAAA,MAAnBhB,KAAmB,uEAAb,EAAa;AAAA,MAATG,MAAS;;AACrD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKa,mBAAL;AACI,aAAOd,MAAM,CAACE,OAAd;;AACJ;AACI,aAAOL,KAAP;AAJR;AAMH,CAPM","sourcesContent":["\nimport {DEVICE_LIST_FAIL, DEVICE_LIST_REQUEST, DEVICE_LIST_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../constants/ProductConstants\";\n\n/* reducer for product list actions */\nexport const productListReducer = (state = {loading:true, products: []}, action) => {\n\n    switch(action.type){\n\n        case PRODUCT_LIST_REQUEST:\n            return {loading: true};\n        case PRODUCT_LIST_SUCCESS:\n            return {loading: false, products: action.payload};\n        case PRODUCT_LIST_FAIL:\n            return {loading: false, error: action.payload};\n        default:\n            return state;\n        \n    }\n};\n\n/* reducer for product details actions */\n export const productDetailsReducer = (state = {loading: true, product:{}}, action) => {\n\n     switch (action.type){\n         case PRODUCT_DETAILS_REQUEST:\n             return {loading: true};\n         case PRODUCT_DETAILS_SUCCESS:\n             return {loading: false, product: action.payload};\n         case PRODUCT_DETAILS_FAIL:\n             return {loading: false, error: action.payload};\n         default:\n             return state;\n     }\n };\n\n  /* reducer for user device slection actions */\n//   export const deviceDropdownReducer = (state = {loading1:true, devices: []}, action) => {\n\n//     switch(action.type){\n\n//         case DEVICE_LIST_REQUEST:\n//             return {loading1: true};\n//         case DEVICE_LIST_SUCCESS:\n//             return {loading1: false, devices: action.payload};\n//         case DEVICE_LIST_FAIL:\n//             return {loading1: false, error1: action.payload};\n//         default:\n//             return state;\n        \n//     }\n//   };\n\n\nlet options= [\n    {key: 1, \n     text: \"this is what's displayed\", \n     value: \"this is the event value\"},\n\n     {key: 2,\n     text: \"option2\",\n     value: \"value of option 2\"}\n]\n\nexport const connectReducer = (state= \"connected\", action) =>{\n    switch(action.type){\n        default:\n        return state\n    }\n}\n\n//manages the options array\nexport const optionsReducer = (state= options, action)=>{\n    switch(action.type){\n        case ADD_DROPDOWN_VALUE:\n            return [...state, action.payload]\n        default:\n        return state\n    } \n}\n\n\n//manages the selected values array\nexport const selectedValuesReducer = (state=[], action)=>{\n    switch(action.type){\n        case SET_DROPDOWN_VALUES:\n            return action.payload \n        default:\n            return state\n    } \n}"]},"metadata":{},"sourceType":"module"}