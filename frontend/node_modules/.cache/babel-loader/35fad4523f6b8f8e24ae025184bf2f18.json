{"ast":null,"code":"var _jsxFileName = \"/Users/smoke/AndroidStudioProjects/New_Project/EZTechWebsite/frontend/src/componets/FeatureSelection.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\nimport { render } from \"react-dom\";\nimport Product from \"./Product\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class FeatureSelection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFeatureChange = event => {\n      this.setState({\n        feature: event.target.value\n      });\n    };\n\n    this.state = {\n      features: [],\n      feature: \"\"\n    };\n    this.handleFeatureSubmit = this.handleFeatureSubmit.bind(this);\n  }\n  /* track value of device state when submit is clicked */\n\n\n  handleFeatureSubmit(event) {\n    alert('Your selected value is ' + this.state.feature);\n    event.preventDefault();\n  }\n  /* track value of state when new slection occurs */\n\n\n  /* Check to make sure we do not have duplicate objects for filtering */\n  getUnique(arr, comp) {\n    const unique = arr\n    /* store the values to compare into the array */\n    .map(e => e[comp])\n    /* store the unique object */\n    .map((e, i, final) => final.indexOf(e) === i && i)\n    /* remove the dups and keep only the unique values */\n    .filter(e => arr[e])\n    /* map the unique onject */\n    .map(e => arr[e]);\n    return unique;\n  }\n\n  componentDidMount() {\n    const features = require('./featuresDropdown.json');\n\n    this.setState({\n      features: features\n    });\n  }\n\n  render() {\n    /* Products - feature filtering */\n    const features = this.state.features;\n    const feature = this.state.feature;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleRatingSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"  Select Features \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: this.state.feature,\n        onChange: this.handleFeatureChange,\n        children: features.map(feature => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: feature.feat,\n          children: feature.feat\n        }, feature.feat, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/smoke/AndroidStudioProjects/New_Project/EZTechWebsite/frontend/src/componets/FeatureSelection.js"],"names":["React","useEffect","useState","ThemeConsumer","render","Product","FeatureSelection","Component","constructor","props","handleFeatureChange","event","setState","feature","target","value","state","features","handleFeatureSubmit","bind","alert","preventDefault","getUnique","arr","comp","unique","map","e","i","final","indexOf","filter","componentDidMount","require","handleRatingSubmit","feat"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,eAAe,MAAMC,gBAAN,SAA+BN,KAAK,CAACO,SAArC,CAA8C;AAEzDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAEX,UAAMA,KAAN;;AAFW,SAsBnBC,mBAtBmB,GAsBGC,KAAK,IAAI;AAE3B,WAAKC,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAAvB,OAAd;AAEH,KA1BkB;;AAGX,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAC,EADA;AAETJ,MAAAA,OAAO,EAAC;AAFC,KAAb;AAMA,SAAKK,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACH;AAGL;;;AACAD,EAAAA,mBAAmB,CAACP,KAAD,EAAO;AAEtBS,IAAAA,KAAK,CAAC,4BAA4B,KAAKJ,KAAL,CAAWH,OAAxC,CAAL;AACAF,IAAAA,KAAK,CAACU,cAAN;AACH;AAGD;;;AAOA;AACAC,EAAAA,SAAS,CAACC,GAAD,EAAMC,IAAN,EAAW;AAEhB,UAAMC,MAAM,GAAGF;AAEf;AAFkB,KAGjBG,GAHc,CAGVC,CAAC,IAAIA,CAAC,CAACH,IAAD,CAHI;AAKf;AALe,KAMdE,GANc,CAMV,CAACC,CAAD,EAAGC,CAAH,EAAMC,KAAN,KAAgBA,KAAK,CAACC,OAAN,CAAcH,CAAd,MAAqBC,CAArB,IAA0BA,CANhC;AAQf;AARe,KASdG,MATc,CASPJ,CAAC,IAAIJ,GAAG,CAACI,CAAD,CATD;AAWf;AAXe,KAYdD,GAZc,CAYVC,CAAC,IAAIJ,GAAG,CAACI,CAAD,CAZE,CAAf;AAcA,WAAOF,MAAP;AACH;;AAEDO,EAAAA,iBAAiB,GAAE;AAEf,UAAMf,QAAQ,GAAGgB,OAAO,CAAC,yBAAD,CAAxB;;AACA,SAAKrB,QAAL,CAAc;AAACK,MAAAA,QAAQ,EAAEA;AAAX,KAAd;AACH;;AAEDb,EAAAA,MAAM,GAAE;AAEJ;AACA,UAAMa,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAA5B;AACA,UAAMJ,OAAO,GAAG,KAAKG,KAAL,CAAWH,OAA3B;AAEA,wBAEA;AAAM,MAAA,QAAQ,EAAE,KAAKqB,kBAArB;AAAA,8BACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,eAEQ;AACI,QAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWH,OADtB;AAEI,QAAA,QAAQ,EAAE,KAAKH,mBAFnB;AAAA,kBAIKO,QAAQ,CAACS,GAAT,CAAab,OAAO,iBACjB;AAA2B,UAAA,KAAK,EAAEA,OAAO,CAACsB,IAA1C;AAAA,oBACKtB,OAAO,CAACsB;AADb,WAAatB,OAAO,CAACsB,IAArB;AAAA;AAAA;AAAA;AAAA,gBADH;AAJL;AAAA;AAAA;AAAA;AAAA,cAFR,eAYI;AAAA;AAAA;AAAA;AAAA,cAZJ,eAaI;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAkBH;;AAhFwD","sourcesContent":["\nimport React, { useEffect, useState} from \"react\";\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\nimport { render } from \"react-dom\";\nimport Product from \"./Product\";\n\nexport default class FeatureSelection extends React.Component{\n    \n    constructor(props) {\n\n            super(props);\n            this.state = {   \n                features:[],\n                feature:\"\",\n             \n            };\n\n            this.handleFeatureSubmit = this.handleFeatureSubmit.bind(this);\n        }\n\n    \n    /* track value of device state when submit is clicked */\n    handleFeatureSubmit(event){\n\n        alert('Your selected value is ' + this.state.feature);\n        event.preventDefault();\n    }\n\n\n    /* track value of state when new slection occurs */\n    handleFeatureChange = event => {\n\n        this.setState({feature: event.target.value});\n\n    }\n\n    /* Check to make sure we do not have duplicate objects for filtering */\n    getUnique(arr, comp){\n\n        const unique = arr\n\n        /* store the values to compare into the array */\n        .map(e => e[comp])\n\n        /* store the unique object */\n        .map((e,i, final) => final.indexOf(e) === i && i)\n\n        /* remove the dups and keep only the unique values */\n        .filter(e => arr[e])\n\n        /* map the unique onject */\n        .map(e => arr[e]);\n\n        return unique;\n    }\n\n    componentDidMount(){\n\n        const features = require('./featuresDropdown.json');\n        this.setState({features: features});\n    }\n\n    render(){\n\n        /* Products - feature filtering */\n        const features = this.state.features;\n        const feature = this.state.feature;\n\n        return(\n\n        <form onSubmit={this.handleRatingSubmit}>\n                <label>  Select Features </label>\n                <select\n                    value={this.state.feature}\n                    onChange={this.handleFeatureChange}\n                    >\n                    {features.map(feature => (\n                        <option key={feature.feat} value={feature.feat}>\n                            {feature.feat}\n                        </option>\n                    ))}\n                </select>\n            <br />\n            <br />\n        </form>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}