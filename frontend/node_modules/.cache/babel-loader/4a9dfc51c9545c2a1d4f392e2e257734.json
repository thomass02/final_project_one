{"ast":null,"code":"var _jsxFileName = \"/Users/smoke/Desktop/EZTechWebsite/frontend/src/Screens/HomeScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport Product from \"../componets/Product\";\nimport LoadingBox from \"../componets/LoadingBox\";\nimport MessageBox from \"../componets/MessageBox\"; // import data from \"../data\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomeScreen() {\n  _s();\n\n  /* array to get the product array from the backend - setProducts function builds the array */\n  const [products, setProducts] = useState([]);\n  /* array to get the enhance user experience - deal with loading progress */\n\n  const [loading, setLoading] = useState(false);\n  /* array to get the enhance user experience - deal errors with loading progress */\n\n  const [error, setError] = useState(false);\n  /* Send request to backend */\n\n  useEffect(() => {\n    /* define the \"fetch function\" use the products api to get all product info and store into data array */\n    const fetchData = async () => {\n      /* try to load products, monitoring loading progress, and catch loading errors */\n      try {\n        setLoading(true);\n        const {\n          data\n        } = await axios.get('/api/products');\n        setLoading(false);\n        setProducts(data);\n      }\n      /* loading errors - properly catch and notify user of the errors */\n      catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    /* Call fetch data function - action to build data array */\n\n\n    fetchData();\n  }, []);\n  /* Homescreen Redering */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 24\n    }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 59\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row center\",\n      children: products.map(product => /*#__PURE__*/_jsxDEV(Product, {\n        product: product\n      }, product._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HomeScreen, \"m3oEjgB12qkn2TrZufUtCkCMnj4=\");\n\n_c = HomeScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"sources":["/Users/smoke/Desktop/EZTechWebsite/frontend/src/Screens/HomeScreen.js"],"names":["React","useEffect","useState","axios","Product","LoadingBox","MessageBox","HomeScreen","products","setProducts","loading","setLoading","error","setError","fetchData","data","get","err","message","map","product","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB,C,CAEA;;;AAEA,eAAe,SAASC,UAAT,GAAqB;AAAA;;AAEhC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AAEA;;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AAEA;;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,KAAD,CAAlC;AAEA;;AACAD,EAAAA,SAAS,CAAC,MAAM;AAEZ;AACA,UAAMa,SAAS,GAAG,YAAY;AAE1B;AACA,UAAG;AAECH,QAAAA,UAAU,CAAC,IAAD,CAAV;AACA,cAAM;AAACI,UAAAA;AAAD,YAAS,MAAMZ,KAAK,CAACa,GAAN,CAAU,eAAV,CAArB;AACAL,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,QAAAA,WAAW,CAACM,IAAD,CAAX;AACH;AAED;AACA,aAAOE,GAAP,EAAW;AAEPJ,QAAAA,QAAQ,CAACI,GAAG,CAACC,OAAL,CAAR;AACAP,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AAEJ,KAlBD;AAoBA;;;AACAG,IAAAA,SAAS;AAEZ,GA1BQ,EA0BN,EA1BM,CAAT;AA6BA;;AACA,sBACI;AAAA,cACKJ,OAAO,gBAAG,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAA+BE,KAAK,gBAAE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,QAApB;AAAA,gBAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,YAAF,gBAC5C;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACKJ,QAAQ,CAACW,GAAT,CAAcC,OAAD,iBACV,QAAC,OAAD;AAA2B,QAAA,OAAO,EAAEA;AAApC,SAAcA,OAAO,CAACC,GAAtB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GArDuBd,U;;KAAAA,U","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport axios from 'axios';\nimport Product from \"../componets/Product\";\nimport LoadingBox from \"../componets/LoadingBox\";\nimport MessageBox from \"../componets/MessageBox\";\n\n// import data from \"../data\";\n\nexport default function HomeScreen(){\n\n    /* array to get the product array from the backend - setProducts function builds the array */\n    const [products, setProducts] = useState([]);\n\n    /* array to get the enhance user experience - deal with loading progress */\n    const [loading, setLoading] = useState(false);\n\n    /* array to get the enhance user experience - deal errors with loading progress */\n    const [error, setError] = useState(false);\n\n    /* Send request to backend */\n    useEffect(() => {\n\n        /* define the \"fetch function\" use the products api to get all product info and store into data array */\n        const fetchData = async () => {\n\n            /* try to load products, monitoring loading progress, and catch loading errors */\n            try{\n\n                setLoading(true);\n                const {data} = await axios.get('/api/products');\n                setLoading(false);\n                setProducts(data);\n            }\n\n            /* loading errors - properly catch and notify user of the errors */\n            catch (err){\n\n                setError(err.message);\n                setLoading(false);\n            }\n            \n        };\n\n        /* Call fetch data function - action to build data array */\n        fetchData();\n\n    }, []);\n\n\n    /* Homescreen Redering */\n    return (\n        <div>\n            {loading? (<LoadingBox></LoadingBox>): error?(<MessageBox variant=\"danger\">{error}</MessageBox>):(\n            <div className=\"row center\">\n                {products.map((product) => (\n                    <Product key={product._id} product={product}></Product>\n                ))}\n            </div>\n            )}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}