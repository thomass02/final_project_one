{"ast":null,"code":"var _jsxFileName = \"/Users/smoke/AndroidStudioProjects/New_Project/EZTechWebsite/frontend/src/componets/test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Test() {\n  _s();\n\n  const [loading, setLoading] = React.useState(true);\n  const [data, setData] = React.useState([]);\n  const [value, setValue] = React.useState(\"Device Selection\");\n  React.useEffect(() => {\n    let unmounted = false;\n\n    async function fetchData() {\n      const response = await fetch(\"/api/deviceType\");\n      const data = await response.json();\n\n      if (!unmounted) {\n        // setData(data);\n        setData( // data.map(({name}) => ({label: name, value:name}))\n        data.map(_ref => {\n          let {\n            device\n          } = _ref;\n          return {\n            id: device._\n          };\n        }));\n        setLoading(false);\n      }\n    }\n\n    ;\n    fetchData();\n    return () => {\n      unmounted = true;\n    };\n  }, []);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    disabled: loading,\n    value: value,\n    onChange: e => setValue(e.currentTarget.value),\n    children: data.map(_ref2 => {\n      let {\n        label,\n        value\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: value,\n        children: label\n      }, value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Test, \"GuW6ze+mUPF1QgRsqG7AVuhg6Ew=\");\n\n_c = Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/smoke/AndroidStudioProjects/New_Project/EZTechWebsite/frontend/src/componets/test.js"],"names":["React","useEffect","useState","Test","loading","setLoading","data","setData","value","setValue","unmounted","fetchData","response","fetch","json","map","device","id","_","console","log","e","currentTarget","label"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;;AAEA,eAAe,SAASC,IAAT,GAAe;AAAA;;AAC1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,KAAK,CAACE,QAAN,CAAe,IAAf,CAA9B;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBP,KAAK,CAACE,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBT,KAAK,CAACE,QAAN,CAAe,kBAAf,CAA1B;AAGAF,EAAAA,KAAK,CAACC,SAAN,CAAgB,MAAM;AAClB,QAAIS,SAAS,GAAG,KAAhB;;AAEA,mBAAeC,SAAf,GAA2B;AACzB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAD,CAA5B;AAEA,YAAMP,IAAI,GAAG,MAAMM,QAAQ,CAACE,IAAT,EAAnB;;AACA,UAAG,CAACJ,SAAJ,EAAc;AAEZ;AACAH,QAAAA,OAAO,EAEH;AACAD,QAAAA,IAAI,CAACS,GAAL,CAAS;AAAA,cAAC;AAACC,YAAAA;AAAD,WAAD;AAAA,iBAAe;AAACC,YAAAA,EAAE,EAACD,MAAM,CAACE;AAAX,WAAf;AAAA,SAAT,CAHG,CAAP;AAMAb,QAAAA,UAAU,CAAC,KAAD,CAAV;AAED;AACF;;AAAA;AACDM,IAAAA,SAAS;AACT,WAAO,MAAM;AAETD,MAAAA,SAAS,GAAG,IAAZ;AACH,KAHD;AAID,GAzBH,EAyBK,EAzBL;AA2BES,EAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AAEF,sBAEI;AACI,IAAA,QAAQ,EAAEF,OADd;AAEI,IAAA,KAAK,EAAEI,KAFX;AAGI,IAAA,QAAQ,EAAGa,CAAD,IAAOZ,QAAQ,CAACY,CAAC,CAACC,aAAF,CAAgBd,KAAjB,CAH7B;AAAA,cAMKF,IAAI,CAACS,GAAL,CAAS;AAAA,UAAC;AAAEQ,QAAAA,KAAF;AAASf,QAAAA;AAAT,OAAD;AAAA,0BACN;AAAoB,QAAA,KAAK,EAAEA,KAA3B;AAAA,kBACCe;AADD,SAAaf,KAAb;AAAA;AAAA;AAAA;AAAA,cADM;AAAA,KAAT;AANL;AAAA;AAAA;AAAA;AAAA,UAFJ;AAeH;;GAlDuBL,I;;KAAAA,I","sourcesContent":["\nimport React, { useEffect, useState} from \"react\";\n\nexport default function Test(){\n    const [loading, setLoading] = React.useState(true);\n    const [data, setData] = React.useState([]);\n    const [value, setValue] = React.useState(\"Device Selection\");\n\n\n    React.useEffect(() => {\n        let unmounted = false;\n\n        async function fetchData() {\n          const response = await fetch(\"/api/deviceType\");\n          \n          const data = await response.json();\n          if(!unmounted){\n\n            // setData(data);\n            setData(\n\n                // data.map(({name}) => ({label: name, value:name}))\n                data.map(({device}) => ({id:device._}))\n            );\n\n            setLoading(false);\n\n          }\n        };\n        fetchData();\n        return () => {\n\n            unmounted = true;\n        };\n      }, []);\n\n      console.log(data);\n\n    return(\n\n        <select\n            disabled={loading}\n            value={value}\n            onChange={(e) => setValue(e.currentTarget.value)}\n        >\n\n            {data.map(({ label, value }) => (\n                <option key={value} value={value}>\n                {label}\n                </option>\n            ))}\n        </select>\n    );\n}"]},"metadata":{},"sourceType":"module"}